### 子组件为何不可以修改父组件传递的Props，如果修改了，Vue是如何监控到属性的修改并给出警告的？ 

子组件不能修改父组件传递的props是因为props是只读的，如果子组件修改了props，那么父组件也无法感知到，这就造成了数据不一致的问题。
单向数据流式自上而下，子组件需要修改值则需要子组件触发事件，而父组件来监听这个时间，然后由父组件来修改原始数据。

VUe监控到到props被需改的情况，即Vue响应式系统起来作用。Vue初始化组件时，会对props进行响应式处理。每个prpp会被定义为组件实例上的
一个响应式属性，当子组件尝试修改这个值时，VUe相式检测到会发出警告。

### 相同名称的插槽是合并还是替换？
根据不同情况选择合适的插槽策略，分为三种情况：
1.父组件中多次使用同名插槽
2.子组件中存在多个同名插槽

合并的例外情况
替换行为：父组件多次定义同名插槽时，后者覆盖前者。
填充行为：子组件多个同名插槽会共享父组件传递的同一内容。

### 扩展Personallnfo Demo对手机号做非空且合法校验，如不合法，则给出错误提示
首先，需要确定需求：非空校验和合法性校验。
接下来，考虑如何在Vue中实现表单验证。两种方法：Vue的内置验证或第三方库。
总结步骤：
- 数据绑定:v-model绑定phone
- 验证方法：检查非空和正则匹配
- 错误提示：根据验证结果显示信息
- 表单提交处理：阻止无效



